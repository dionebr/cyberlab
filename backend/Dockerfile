# üö® DOCKERFILE VULNER√ÅVEL PARA EDUCA√á√ÉO
# ‚ö†Ô∏è Esta configura√ß√£o √© INTENCIONALMENTE INSEGURA
# üéì Para demonstrar problemas de seguran√ßa em containers
# üö® N√ÉO usar em produ√ß√£o!

# Usar imagem oficial do Node.js (vers√£o espec√≠fica para consist√™ncia)
FROM node:18-alpine

# üö® CONFIGURA√á√ïES VULNER√ÅVEIS - N√ÉO fazer em produ√ß√£o!

# Executar como root - PERIGOSO!
# USER root  # Comentado porque j√° √© root por padr√£o

# Instalar pacotes adicionais com privil√©gios elevados
RUN apk update && apk add --no-cache \
    curl \
    wget \
    bash \
    vim \
    mysql-client \
    openssh-client \
    git \
    # Ferramentas perigosas para demonstra√ß√£o
    netcat-openbsd \
    nmap \
    tcpdump

# ‚ö†Ô∏è Definir diret√≥rio de trabalho permissivo
WORKDIR /app

# ‚ö†Ô∏è Copiar package.json e instalar depend√™ncias
# Fazendo download de depend√™ncias sem verifica√ß√£o de integridade
COPY package*.json ./

# Install dependencies com npm (sem --production para ter dev tools)
RUN npm install --verbose

# üö® Copiar c√≥digo fonte para container
# Incluindo arquivos sens√≠veis que deveriam estar no .dockerignore
COPY . .

# ‚ö†Ô∏è Criar diret√≥rios com permiss√µes amplas
RUN mkdir -p /app/logs /app/uploads /app/backups /app/temp && \
    chmod 777 /app/logs /app/uploads /app/backups /app/temp

# üö® Configurar vari√°veis de ambiente perigosas
ENV NODE_ENV=development
ENV DEBUG=*
ENV LOG_LEVEL=silly
ENV ALLOW_DEBUG=true
ENV DISABLE_SECURITY=true

# ‚ö†Ô∏è Vari√°veis de database expostas (deveriam ser secrets)
ENV DB_HOST=mysql
ENV DB_PORT=3306
ENV DB_USER=vulnerable_user
ENV DB_PASS=weak123
ENV DB_NAME=cyberlab_vulnerable

# ‚ö†Ô∏è Chaves e secrets hardcoded - MUITO PERIGOSO!
ENV JWT_SECRET=super_secret_key_123
ENV API_MASTER_KEY=master_api_key_xyz789
ENV ENCRYPTION_KEY=weak_encryption_key_456

# üö® Expor m√∫ltiplas portas sem firewall
EXPOSE 3001
EXPOSE 9229
EXPOSE 8080
EXPOSE 3000

# ‚ö†Ô∏è Health check que pode vazar informa√ß√µes
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# üö® Comando de inicializa√ß√£o vulner√°vel
# Executar com privil√©gios elevados e debug habilitado
CMD ["node", "--inspect=0.0.0.0:9229", "server.js"]

# üö® PROBLEMAS DE SEGURAN√áA NESTE DOCKERFILE:
# 1. Executando como root
# 2. Vari√°veis sens√≠veis hardcoded
# 3. Permiss√µes 777 nos diret√≥rios
# 4. Debug inspector exposto
# 5. Ferramentas de hacking instaladas
# 6. M√∫ltiplas portas expostas
# 7. Depend√™ncias de desenvolvimento inclu√≠das
# 8. Health check que pode vazar dados
# 9. Logs em modo verbose
# 10. Sem .dockerignore (copia arquivos sens√≠veis)