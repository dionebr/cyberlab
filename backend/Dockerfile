# üö® DOCKERFILE VULNER√ÅVEL PARA EDUCA√á√ÉO
# ‚ö†Ô∏è Esta configura√ß√£o √© INTENCIONALMENTE INSEGURA
# üéì Para demonstrar problemas de seguran√ßa em containers
# üö® N√ÉO usar em produ√ß√£o!

# Usar imagem oficial do Node.js
FROM node:18-alpine

# üö® CONFIGURA√á√ïES VULNER√ÅVEIS - N√ÉO fazer em produ√ß√£o!
# Instalar ferramentas adicionais para demonstra√ß√µes
RUN apk update && apk add --no-cache \
    curl \
    wget \
    bash \
    vim \
    mysql-client \
    openssh-client \
    git \
    # Ferramentas para command injection demos
    netcat-openbsd \
    bind-tools \
    iputils

# ‚ö†Ô∏è Definir diret√≥rio de trabalho
WORKDIR /app

# Copiar package.json e instalar depend√™ncias
COPY package*.json ./

# Instalar depend√™ncias incluindo dev dependencies para debugging
RUN npm install

# üö® Copiar c√≥digo fonte para container
COPY . .

# ‚ö†Ô∏è Criar diret√≥rios com permiss√µes espec√≠ficas
RUN mkdir -p /app/logs /app/uploads /app/backups /app/temp && \
    chmod 755 /app/logs /app/uploads /app/backups /app/temp

# üö® Configurar vari√°veis de ambiente para desenvolvimento vulner√°vel
ENV NODE_ENV=development
ENV DEBUG=cyberlab:*
ENV LOG_LEVEL=debug
ENV PORT=5001

# ‚ö†Ô∏è Vari√°veis de database (para ambiente educacional)
ENV DB_HOST=mysql
ENV DB_PORT=3306
ENV DB_USER=vulnerable_user
ENV DB_PASS=weak123
ENV DB_NAME=cyberlab_vulnerable

# ‚ö†Ô∏è Secrets para ambiente de laborat√≥rio
ENV JWT_SECRET=cyberlab_education_key_123
ENV API_MASTER_KEY=education_master_key
ENV ENCRYPTION_KEY=lab_encryption_key

# Expor porta principal
EXPOSE 5001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5001/api/status || exit 1

# Comando de inicializa√ß√£o
CMD ["npm", "run", "dev"]